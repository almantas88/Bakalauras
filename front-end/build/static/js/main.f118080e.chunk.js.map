{"version":3,"sources":["services/authServices.js","components/menuDrawer.js","public/images/be-fono-logo.png","context/messageContext.js","components/flashMessage.js","pages/SignIn.js","components/users/infoAboutUser.js","services/userServices.js","context/usersContext.js","components/users/deleteUserConfirmation.js","components/users/updateUserForm.js","components/users/usersTable.js","components/users/usersSearch.js","components/users/addUserForm.js","pages/Users.js","context/booksContext.js","components/books/infoAboutBook.js","services/bookServices.js","components/books/deleteBookConfirmation.js","components/books/updateBookForm.js","components/books/booksTable.js","components/books/bookSearch.js","components/books/addBookForm.js","pages/Books.js","context/booksCartContext.js","components/booksCheckInOut/booksCheckOutTable.js","components/booksCheckInOut/booksCartTable.js","components/booksCheckInOut/bookSearchCheckInOut.js","pages/BooksCheckOutCheckIn.js","App.js","index.js"],"names":["apiUrl","process","REACT_APP_API_URL","login","data","a","axios","post","response","window","localStorage","setItem","token","getCurrentUser","jwtDecode","getItem","logout","removeItem","location","TemporaryDrawer","React","useState","left","state","setState","user","setUser","useEffect","console","log","error","anchor","toggleDrawer","open","event","type","key","className","Fragment","Button","id","onClick","Drawer","onClose","Box","sx","width","role","onKeyDown","List","to","ListItem","button","ListItemIcon","ListItemText","primary","Divider","firstName","lastName","capFirstName","charAt","toUpperCase","slice","capLastName","getFullNameCapitalized","MessageContext","createContext","MessageProvider","props","message","setMessage","showMessageBox","setShowMessageBox","severity","setSeverity","values","Provider","value","children","TransitionAlerts","useContext","closeError","Collapse","in","Alert","variant","action","IconButton","color","size","fontSize","mb","theme","createTheme","SignInSide","handleMessageShow","doSubmit","email","password","setTimeout","msg","ThemeProvider","Grid","container","component","height","CssBaseline","item","xs","sm","md","backgroundImage","ImageLogo","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","my","mx","display","flexDirection","alignItems","Avatar","m","bgcolor","Typography","noValidate","onSubmit","preventDefault","FormData","currentTarget","get","mt","TextField","margin","required","fullWidth","label","name","autoComplete","autoFocus","Link","href","InfoUser","Container","marginTop","borderRadius","spacing","justify","handleChange","padding","userInfo","cardID","align","createNewUser","getAllUsers","allUsers","deleteUser","delete","deletedUser","getOneUser","foundUser","updateOneUser","put","updatingUser","interceptors","request","use","config","headers","common","UsersContext","UsersProvider","allUserslist","setAllUsersList","handleDeleteUserContext","userListAfterDeletion","filter","element","handleUpdateUserContext","userListAfterUpdate","grade","DeleteUser","usersContext","handleDeleteUser","closeConfirmation","UpdateUserForm","isLoading","setIsLoading","passwordCheck","setValues","handleInputChange","e","target","fetchUser","handleSubmit","CircularProgress","onChange","disabled","columns","minWidth","UsersTable","forwardRef","ref","page","setPage","rowsPerPage","setRowsPerPage","showUserInfo","setshowUserInfo","showUpdateUserForm","setShowUpdateUserForm","showDeleteConfirmation","setShowDeleteConfirmation","setUserInfo","useImperativeHandle","setToFirstPage","handleShowUserInfo","row","handleShowUpdateUserForm","handleShowDeleteConfirmation","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","style","TableBody","allRowsForShowing","hover","tabIndex","format","TablePagination","rowsPerPageOptions","count","length","onPageChange","newPage","onRowsPerPageChange","memo","grades","UsersSearch","usersList","setAllRowsForShowing","searchTextFirstName","setSearchTextFirstName","searchTextCardId","setSearchTextCardId","searchTextLastName","setSearchTextLastName","setGrade","childRef","useRef","text","select","inputProps","MenuProps","disableScrollLock","option","MenuItem","justifyContent","startIcon","filteredRows","toLowerCase","includes","current","handleSearchButton","allRows","AddUserForm","setUsersList","Users","showNewUserForm","setshowNewUserForm","users","returnAllUsers","getRole","handleShowUserAddForm","BooksContext","BooksProvider","allBooksList","setAllBooksList","handleDeleteBookContext","bookID","bookListAfterDeletion","handleUpdateBookContext","bookListAfterUpdate","title","author","description","InfoBook","bookInfo","createNewBook","getAllBooks","allBooks","deleteBook","getOneBook","foundBook","updateOneBook","DeleteBook","booksContext","handleDeleteBook","UpdateBookForm","fetchBook","book","minRows","multiline","maxRows","BooksTable","showUpdateBookForm","setShowUpdateBookForm","showBookInfo","setshowBookInfo","setBookInfo","handleShowBookInfo","handleShowUpdateBookForm","BookSearch","booksList","searchTextBookId","setSearchTextBookId","searchTextTitle","setSearchTextTitle","searchTextAuthor","setSearchTextAuthor","AddBookForm","setError","setShowError","setBooksList","Books","showNewBookForm","setshowNewBookForm","books","returnAllBooks","BooksCartContext","BooksCartProvider","allBooksCartList","setAllBooksCartList","handleDeleteBooksCartContext","handleAddBooksCartContext","some","booksCartContext","maxWidth","lg","direction","endIcon","App","path","NotFound","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f118080e.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport jwtDecode from \"jwt-decode\";\r\nconst apiUrl = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n\r\nexport async function login(data) {\r\n\r\n    const response = await axios.post(`${apiUrl}/users/login`, data);\r\n    window.localStorage.setItem(\"token\", response.data.token);\r\n    return response;\r\n}\r\n\r\nexport function getCurrentUser() {\r\n    return jwtDecode(localStorage.getItem(\"token\"));\r\n}\r\n\r\nexport function logout() {\r\n  window.localStorage.removeItem(\"token\");\r\n  window.location = \"/\";\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport Button from \"@mui/material/Button\";\r\nimport List from \"@mui/material/List\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport LogoutIcon from \"@mui/icons-material/Logout\";\r\nimport PeopleAltIcon from \"@mui/icons-material/PeopleAlt\";\r\nimport MenuBookIcon from \"@mui/icons-material/MenuBook\";\r\nimport AutoStoriesIcon from \"@mui/icons-material/AutoStories\";\r\nimport ListIcon from \"@mui/icons-material/List\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { getCurrentUser } from \"../services/authServices\";\r\nimport { logout } from \"../services/authServices\";\r\n\r\nexport default function TemporaryDrawer() {\r\n  const [state, setState] = React.useState({\r\n    left: false,\r\n  });\r\n  const [user, setUser] = React.useState();\r\n\r\n  const getFullNameCapitalized = (firstName, lastName) => {\r\n    const capFirstName = firstName.charAt(0).toUpperCase() + firstName.slice(1);\r\n    const capLastName = lastName.charAt(0).toUpperCase() + lastName.slice(1);\r\n\r\n    return `${capFirstName} ${capLastName}`;\r\n  }\r\n\r\n  useEffect( () => {\r\n    try {\r\n      const user = getCurrentUser();\r\n      console.log(user);\r\n      if(!user) window.location = \"/unauthorized\";\r\n      else\r\n      setUser(user);\r\n    } catch (error) {\r\n      window.location = \"/unauthorized\";\r\n    }\r\n  }, []);\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <Box\r\n      sx={{ width: anchor === \"top\" || anchor === \"bottom\" ? \"auto\" : 250 }}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        <Link className=\"link\" to=\"/users\">\r\n          <ListItem button key={\"Vartotojai\"} >\r\n            <ListItemIcon>\r\n              <PeopleAltIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Vartotojai\"} />\r\n          </ListItem>\r\n        </Link>\r\n\r\n        <Link className=\"link\" to=\"/books\">\r\n          <ListItem button key={\"Knygos\"} >\r\n            <ListItemIcon>\r\n              <MenuBookIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Knygos\"} />\r\n          </ListItem>\r\n        </Link>\r\n\r\n        <Link className=\"link\" to=\"/bookscheckincheckout\">\r\n          <ListItem button key={\"Knygų išdavimas\"}>\r\n            <ListItemIcon>\r\n              <AutoStoriesIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Knygų išdavimas\"} />\r\n          </ListItem>\r\n        </Link>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListItem button key={\"Atsijungti\"} onClick={logout}>\r\n          <ListItemIcon>\r\n            <LogoutIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary={\"Atsijungti\"} />\r\n        </ListItem>\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <React.Fragment key={\"left\"}>\r\n        <Button id=\"menu-btn\" onClick={toggleDrawer(\"left\", true)}>\r\n          <ListIcon className=\"menu-icon\" /> Meniu\r\n        </Button>\r\n        <Drawer\r\n          anchor={\"left\"}\r\n          open={state[\"left\"]}\r\n          onClose={toggleDrawer(\"left\", false)}\r\n        >\r\n          {list(\"left\")}\r\n        </Drawer>\r\n      </React.Fragment>\r\n      \r\n      <Link className=\"link\" to=\"/\">\r\n        <h1 id=\"logo-img\"> Bibliotekos sitema(logo)</h1>\r\n      </Link>\r\n      {user ? <h3 className=\"userName\">{getFullNameCapitalized(user.firstName, user.firstName)}</h3> : null }\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/be-fono-logo.9ff92c37.png\";","import { createContext, useState } from \"react\";\r\nexport const MessageContext = createContext(\"Default Value\");\r\n\r\nexport const MessageProvider = (props) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [showMessageBox, setShowMessageBox] = useState(false);\r\n  const [severity, setSeverity] = useState(\"info\");\r\n\r\n  const closeError = () => {\r\n    setMessage(\"\");\r\n    setShowMessageBox(false);\r\n  };\r\n\r\n  const handleMessageShow = (message, severity) => {\r\n    setShowMessageBox(true);\r\n    setMessage(message);\r\n    setSeverity(severity);\r\n  };\r\n\r\n  const values = [\r\n    message,\r\n    severity,\r\n    showMessageBox,\r\n    handleMessageShow,\r\n    closeError,\r\n  ];\r\n\r\n  return (\r\n    <MessageContext.Provider\r\n      value={values}\r\n    >\r\n      {props.children}\r\n    </MessageContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { MessageContext } from \"../context/messageContext\";\r\n\r\nexport default function TransitionAlerts() {\r\n  const [message, severity, showMessageBox, handleMessageShow, closeError] =\r\n    useContext(MessageContext);\r\n\r\n  return (\r\n    <Box className=\"alert error\">\r\n      <Collapse in={showMessageBox}>\r\n        <Alert\r\n          variant=\"filled\"\r\n          severity={severity}\r\n          action={\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              size=\"small\"\r\n              onClick={closeError}\r\n            >\r\n              <CloseIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          }\r\n          sx={{ mb: 2 }}\r\n        >\r\n          {message}\r\n        </Alert>\r\n      </Collapse>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport ImageLogo from \"../public/images/be-fono-logo.png\";\r\nimport { login } from \"../services/authServices\";\r\nimport FlashMessage from \"../components/flashMessage\";\r\nimport { MessageContext } from \"../context/messageContext\";\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function SignInSide() {\r\n  const [message, severity, showMessageBox, handleMessageShow, closeError] =\r\n    useContext(MessageContext);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n    doSubmit(data.get(\"email\"), data.get(\"password\"));\r\n  };\r\n\r\n  const doSubmit = async (email, password) => {\r\n    try {\r\n      await login({ email, password });\r\n      handleMessageShow(\"Pavyko prisijungti\", \"success\");\r\n      setTimeout(() => {\r\n        closeError();\r\n        window.location = \"/users\";\r\n      }, 500);\r\n    } catch (error) {\r\n      handleMessageShow(error.response.data.msg, \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Grid container component=\"main\" sx={{ height: \"100vh\" }}>\r\n        <CssBaseline />\r\n        <Grid\r\n          item\r\n          xs={false}\r\n          sm={4}\r\n          md={7}\r\n          sx={{\r\n            backgroundImage: `url(${ImageLogo})`,\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundColor: (t) =>\r\n              t.palette.mode === \"light\"\r\n                ? t.palette.grey[50]\r\n                : t.palette.grey[900],\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n          }}\r\n        />\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <Box\r\n            sx={{\r\n              my: 8,\r\n              mx: 4,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Prisijungti\r\n            </Typography>\r\n            <Box\r\n              component=\"form\"\r\n              noValidate\r\n              onSubmit={handleSubmit}\r\n              sx={{ mt: 1 }}\r\n            >\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"El. Paštas\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n              />\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Slaptažodis\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n              >\r\n                Prisijungti\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link href=\"/reset\" variant=\"body2\">\r\n                    Pamiršote slaptažodį?\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link href=\"/newuser\" variant=\"body2\">\r\n                    {\"Neturi paskyros?\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nexport default function InfoUser(props) {\r\n  return (\r\n    <div className=\"addUserContainer\">\r\n      <Container\r\n        className=\"addUserForm\"\r\n        sx={{\r\n          marginTop: 10,\r\n          width: 500,\r\n          height: 600,\r\n          backgroundColor: \"#F5F5F5\",\r\n          borderRadius: 2\r\n        }}\r\n      >\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          justify=\"center\"\r\n        >\r\n          <Grid item xs={10}>\r\n            <h2>Informaciją apie vartotoją</h2>\r\n          </Grid>\r\n          <Grid item xs={2} onClick={props.handleChange}>\r\n            <CloseIcon sx={{ fontSize: 40, color: \"#252525\", padding: 1 }} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3>{props.userInfo.cardID} - {props.userInfo.firstName} {props.userInfo.lastName}</h3>\r\n          </Grid>\r\n          <Grid align=\"center\" item xs={12}>\r\n            <Button variant=\"contained\">Pridėti</Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nconst apiUrl = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n\r\naxios.interceptors.request.use((config) => {\r\n  config.headers.common[\"x-auth-token\"] = `${localStorage.getItem(\"token\")}`;\r\n  return config;\r\n});\r\n\r\nexport async function createNewUser(data) {\r\n  const response = await axios.post(`${apiUrl}/users/register`, data);\r\n  return response;\r\n}\r\n\r\nexport async function getAllUsers() {\r\n  const allUsers = await axios.get(`${apiUrl}/users/allUsers`);\r\n  return allUsers;\r\n}\r\n\r\nexport async function deleteUser(data) {\r\n  const deletedUser = await axios.delete(`${apiUrl}/users/deleteUser`, {\r\n    data,\r\n  });\r\n  return deletedUser;\r\n}\r\n\r\nexport async function getOneUser(data) {\r\n  const foundUser = await axios.post(`${apiUrl}/users/oneUser`, data);\r\n  return foundUser;\r\n}\r\n\r\nexport async function updateOneUser(data) {\r\n  const updatingUser = await axios.put(`${apiUrl}/users/updateUser`, data);\r\n  return updatingUser;\r\n}\r\n","import { createContext, useState } from \"react\";\r\nexport const UsersContext = createContext([]);\r\n\r\nexport const UsersProvider = (props) => {\r\n  const [allUserslist, setAllUsersList] = useState([]);\r\n\r\n  const handleDeleteUserContext = (cardID) => {\r\n    console.log(allUserslist);\r\n    const userListAfterDeletion = allUserslist.filter((element) =>  element.cardID !== cardID  )\r\n    setAllUsersList(userListAfterDeletion);\r\n  };\r\n\r\n  // cia padaryt update funkcija\r\n\r\n  const handleUpdateUserContext = (cardID, values) => {\r\n    const userListAfterUpdate = allUserslist.filter((element) =>  element.cardID !== cardID   )\r\n    setAllUsersList([\r\n      {\r\n        firstName: values.firstName,\r\n        lastName: values.lastName,\r\n        cardID: values.cardID,\r\n        grade: values.grade,\r\n      },\r\n      ...userListAfterUpdate,\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <UsersContext.Provider\r\n      value={{allUserslist, setAllUsersList, handleDeleteUserContext, handleUpdateUserContext}}\r\n    >\r\n      {props.children}\r\n    </UsersContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { deleteUser } from \"../../services/userServices\";\r\nimport { MessageContext } from \"../../context/messageContext\";\r\nimport { UsersContext } from \"../../context/usersContext\";\r\n\r\nexport default function DeleteUser(props) {\r\n  const usersContext =\r\n    useContext(UsersContext);\r\n\r\n    const [message, severity, showMessageBox, handleMessageShow, closeError] =\r\n    useContext(MessageContext);\r\n\r\n  const handleDeleteUser = async () => {\r\n    try {\r\n      \r\n      const cardID = props.userInfo.cardID;\r\n      console.log({cardID});\r\n      const { data } = await deleteUser({cardID: props.userInfo.cardID});\r\n      usersContext.handleDeleteUserContext(props.userInfo.cardID);\r\n      handleMessageShow(\"Vartotojas buvo sėkmingai panaikintas!\", \"success\");\r\n      props.closeConfirmation();\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n      handleMessageShow(error.response.data.msg, \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"addUserContainer\">\r\n      <Container\r\n        className=\"addUserForm\"\r\n        sx={{\r\n          width: 500,\r\n          height: 320,\r\n          marginTop: \"120px\",\r\n          backgroundColor: \"#F5F5F5\",\r\n          borderRadius: \"1%\",\r\n        }}\r\n      >\r\n        <Grid container spacing={3} justify=\"center\">\r\n          <Grid item xs={12}>\r\n            <h2 className=\"centerHeader\">\r\n              Ar tikrai norite panaikinti šį vartotoją?\r\n            </h2>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3 className=\"centerHeader\">\r\n              Kortelės id - {props.userInfo.cardID}\r\n            </h3>\r\n            <h3 className=\"centerHeader\">\r\n              {props.userInfo.firstName} {props.userInfo.lastName}\r\n            </h3>\r\n          </Grid>\r\n          <Grid align=\"right\" item xs={6}>\r\n            <Button\r\n              size=\"large\"\r\n              color=\"error\"\r\n              variant=\"contained\"\r\n              onClick={handleDeleteUser}\r\n            >\r\n              Ištrinti\r\n            </Button>\r\n          </Grid>\r\n          <Grid align=\"left\" item xs={6}>\r\n            <Button\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              onClick={props.handleChange}\r\n            >\r\n              Atšaukti\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { MessageContext } from \"../../context/messageContext\";\r\nimport { getOneUser, updateOneUser } from \"../../services/userServices\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { UsersContext } from \"../../context/usersContext\";\r\n\r\nexport default function UpdateUserForm(props) {\r\n  const [message, severity, showMessageBox, handleMessageShow, closeError] =\r\n    useContext(MessageContext);\r\n\r\n    const usersContext =\r\n    useContext(UsersContext);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [values, setValues] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    cardID: \"\",\r\n    grade: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordCheck: \"\",\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const fetchUser = async (cardID) => {\r\n    try {\r\n      const { data } = await getOneUser({cardID});\r\n      setValues({\r\n        firstName: data.user.firstName,\r\n        lastName: data.user.lastName,\r\n        cardID: data.user.cardID,\r\n        grade: data.user.grade,\r\n        email: data.user.email,\r\n        password: \"\",\r\n        passwordCheck: \"\",\r\n      });\r\n    } catch (error) {\r\n      handleMessageShow(error.response.data.msg, \"error\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(window.localStorage.getItem(\"token\"));\r\n    setIsLoading(true);\r\n    try {\r\n      fetchUser(props.userInfo.cardID);\r\n    } catch (error) {\r\n      handleMessageShow(error.response.data.msg, \"error\");\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n\r\n  // darbai ateičiai : \r\n  // reikia padaryti update route back ende ir čia išsiuntimą į jį\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const { data } = await updateOneUser(values);    \r\n      usersContext.handleUpdateUserContext(values.cardID, values);\r\n      handleMessageShow(\"Vartotojas atnaujintas!\", \"success\");\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n      handleMessageShow(error.response.data.msg, \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"addUserContainer\">\r\n      <Container\r\n        sx={{\r\n          width: 500,\r\n          height: 650,\r\n          marginTop: \"120px\",\r\n          backgroundColor: \"#F5F5F5\",\r\n          borderRadius: \"1%\",\r\n        }}\r\n      >\r\n        {isLoading ? (\r\n          <CircularProgress sx={{ display: \"flex\", margin: \"auto\", padding: 15 }} />\r\n        ) : (\r\n          <Grid container spacing={2} justify=\"center\">\r\n            <Grid item xs={10}>\r\n              <h2>Atnaujinti vartotoją</h2>\r\n            </Grid>\r\n            <Grid item xs={2} onClick={props.handleChange}>\r\n              <CloseIcon sx={{ fontSize: 40, color: \"#252525\", padding: 1 }} />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name=\"cardID\"\r\n                value={values.cardID}\r\n                onChange={handleInputChange}\r\n                fullWidth\r\n                required\r\n                disabled\r\n                autoComplete=\"disabled\"\r\n                label=\"Kortelės id\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                onChange={handleInputChange}\r\n                fullWidth\r\n                required\r\n                autoComplete=\"disabled\"\r\n                label=\"Vardas\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                onChange={handleInputChange}\r\n                fullWidth\r\n                required\r\n                autoComplete=\"disabled\"\r\n                label=\"Pavardė\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name=\"grade\"\r\n                value={values.grade}\r\n                onChange={handleInputChange}\r\n                fullWidth\r\n                required\r\n                autoComplete=\"disabled\"\r\n                label=\"Klasė\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <h3>Vaiko prisijungimo duomenys</h3>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name=\"email\"\r\n                value={values.email}\r\n                onChange={handleInputChange}\r\n                fullWidth\r\n                required\r\n                autoComplete=\"disabled\"\r\n                label=\"El. paštas\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                name=\"password\"\r\n                value={values.password}\r\n                onChange={handleInputChange}\r\n                fullWidth\r\n                required\r\n                type=\"password\"\r\n                autoComplete=\"disabled\"\r\n                label=\"Slaptažodis\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                name=\"passwordCheck\"\r\n                value={values.passwordCheck}\r\n                onChange={handleInputChange}\r\n                fullWidth\r\n                required\r\n                autoComplete=\"disabled\"\r\n                type=\"password\"\r\n                label=\"Pakartotas slaptažodis\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid align=\"center\" item xs={12}>\r\n              <Button\r\n                onClick={handleSubmit}\r\n                size=\"large\"\r\n                variant=\"contained\"\r\n                sx={{ padding: 1, width: \"50%\", margin: \"20px 0\" }}\r\n              >\r\n                Redaguoti\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React, {\r\n  useState,\r\n  memo,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useContext,\r\n} from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { Button } from \"@mui/material\";\r\nimport InfoAboutUserBox from \"./infoAboutUser\";\r\nimport DeleteUserConfirmation from \"./deleteUserConfirmation\";\r\nimport UpdateUserForm from \"./updateUserForm\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { UsersContext } from \"../../context/usersContext\";\r\n\r\nconst columns = [\r\n  {\r\n    id: \"cardID\",\r\n    label: \"Kortelės ID\",\r\n    width: 50,\r\n    minWidth: 50,\r\n  },\r\n  { id: \"firstName\", label: \"Vardas\", width: 150, minWidth: 150 },\r\n  { id: \"lastName\", label: \"Pavardė\", width: 150, minWidth: 150 },\r\n  { id: \"grade\", label: \"Klasė\", width: 10, minWidth: 10 },\r\n  {\r\n    id: \"actions\",\r\n    label: \"Veiksmai\",\r\n    width: 100,\r\n    minWidth: 100,\r\n    align: \"right\",\r\n  },\r\n];\r\n\r\nconst UsersTable = forwardRef((props, ref) => {\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const [showUserInfo, setshowUserInfo] = useState(false);\r\n  const [showUpdateUserForm, setShowUpdateUserForm] = useState(false);\r\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\r\n  const [userInfo, setUserInfo] = useState({\r\n    id: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n  });\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    setToFirstPage,\r\n  }));\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleShowUserInfo = (row) => {\r\n    setUserInfo({\r\n      cardID: row.cardID,\r\n      firstName: row.firstName,\r\n      lastName: row.lastName,\r\n    });\r\n    console.log(userInfo);\r\n    showUserInfo ? setshowUserInfo(false) : setshowUserInfo(true);\r\n  };\r\n\r\n  const handleShowUpdateUserForm = (row) => {\r\n    setUserInfo({\r\n      cardID: row.cardID,\r\n      firstName: row.firstName,\r\n      lastName: row.lastName,\r\n    });\r\n    showUpdateUserForm\r\n      ? setShowUpdateUserForm(false)\r\n      : setShowUpdateUserForm(true);\r\n  };\r\n\r\n  const handleShowDeleteConfirmation = (row) => {\r\n    setUserInfo({\r\n      cardID: row.cardID,\r\n      firstName: row.firstName,\r\n      lastName: row.lastName,\r\n    });\r\n    console.log(userInfo);\r\n    showDeleteConfirmation\r\n      ? setShowDeleteConfirmation(false)\r\n      : setShowDeleteConfirmation(true);\r\n  };\r\n\r\n  const handleCloseDeleteConfirmation = () => {\r\n    setShowDeleteConfirmation(false);\r\n  };\r\n\r\n  const setToFirstPage = () => {\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.isLoading ? (\r\n        <CircularProgress sx={{ display: \"flex\", margin: \"130px auto\" }} />\r\n      ) : (\r\n        <Paper className=\"userTable\" sx={{ width: \"95%\", overflow: \"hidden\" }}>\r\n          <TableContainer sx={{ maxHeight: 430 }}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {props.allRowsForShowing\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.cardID}\r\n                      >\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.id === \"actions\" ? (\r\n                                <>\r\n                                  <Button\r\n                                    onClick={() => handleShowUserInfo(row)}\r\n                                  >\r\n                                    Informacija\r\n                                  </Button>\r\n                                  <Button\r\n                                    onClick={() =>\r\n                                      handleShowUpdateUserForm(row)\r\n                                    }\r\n                                  >\r\n                                    Redaguoti\r\n                                  </Button>\r\n                                  <Button\r\n                                    onClick={() =>\r\n                                      handleShowDeleteConfirmation(row)\r\n                                    }\r\n                                  >\r\n                                    Ištrinti\r\n                                  </Button>\r\n                                </>\r\n                              ) : column.format && typeof value === \"number\" ? (\r\n                                column.format(value)\r\n                              ) : (\r\n                                value\r\n                              )}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 100]}\r\n            component=\"div\"\r\n            count={props.allRowsForShowing.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      )}\r\n      {showUserInfo ? (\r\n        <InfoAboutUserBox\r\n          userInfo={userInfo}\r\n          handleChange={handleShowUserInfo}\r\n        />\r\n      ) : null}\r\n\r\n      {showDeleteConfirmation ? (\r\n        <DeleteUserConfirmation\r\n          userInfo={userInfo}\r\n          handleChange={handleShowDeleteConfirmation}\r\n          closeConfirmation={handleCloseDeleteConfirmation}\r\n        />\r\n      ) : null}\r\n\r\n      {showUpdateUserForm ? (\r\n        <UpdateUserForm\r\n          userInfo={userInfo}\r\n          handleChange={handleShowUpdateUserForm}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default memo(UsersTable);\r\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport DeleteOutlineIcon from \"@mui/icons-material/DeleteOutline\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport UsersTable from \"./usersTable\";\r\nimport { UsersContext } from \"../../context/usersContext\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\n\r\nconst grades = [\r\n  {\r\n    value: \"1a\",\r\n    label: \"1a\",\r\n  },\r\n  {\r\n    value: \"1b\",\r\n    label: \"1b\",\r\n  },\r\n  {\r\n    value: \"1c\",\r\n    label: \"1c\",\r\n  },\r\n  {\r\n    value: \"2a\",\r\n    label: \"2a\",\r\n  },\r\n  {\r\n    value: \"2a\",\r\n    label: \"2a\",\r\n  },\r\n  {\r\n    value: \"2a\",\r\n    label: \"2a\",\r\n  },\r\n  {\r\n    value: \"2a\",\r\n    label: \"2a\",\r\n  },\r\n  {\r\n    value: \"2a\",\r\n    label: \"2a\",\r\n  },\r\n  {\r\n    value: \"2a\",\r\n    label: \"2a\",\r\n  },\r\n  {\r\n    value: \"2a\",\r\n    label: \"2a\",\r\n  },\r\n  {\r\n    value: \"2a\",\r\n    label: \"2a\",\r\n  },\r\n  {\r\n    value: \"2a\",\r\n    label: \"2a\",\r\n  },\r\n  {\r\n    value: \"2a\",\r\n    label: \"2a\",\r\n  },\r\n  {\r\n    value: \"2a\",\r\n    label: \"2a\",\r\n  },\r\n  {\r\n    value: \"2a\",\r\n    label: \"2a\",\r\n  },\r\n  {\r\n    value: \"2a\",\r\n    label: \"2a\",\r\n  },\r\n  \r\n];\r\n\r\nexport default function UsersSearch(props) {\r\n  const usersContext =\r\n    useContext(UsersContext);\r\n\r\n  const [allRowsForShowing, setAllRowsForShowing] = useState(props.usersList);\r\n  const [searchTextFirstName, setSearchTextFirstName] = useState(\"\");\r\n  const [searchTextCardId, setSearchTextCardId] = useState(\"\");\r\n  const [searchTextLastName, setSearchTextLastName] = useState(\"\");\r\n  const [grade, setGrade] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setGrade(event.target.value);\r\n  };\r\n\r\n  const childRef = useRef();\r\n\r\n  const handleSearchButton = () => {\r\n    var filteredRows = usersContext.allUserslist;\r\n\r\n    filteredRows = filteredRows.filter((row) => {\r\n      return row.cardID.toLowerCase().includes(searchTextCardId.toLowerCase());\r\n    });\r\n\r\n    filteredRows = filteredRows.filter((row) => {\r\n      return row.lastName\r\n        .toLowerCase()\r\n        .includes(searchTextLastName.toLowerCase());\r\n    });\r\n\r\n    filteredRows = filteredRows.filter((row) => {\r\n      return row.firstName\r\n        .toLowerCase()\r\n        .includes(searchTextFirstName.toLowerCase());\r\n    });\r\n\r\n    filteredRows = filteredRows.filter((row) => {\r\n      return row.grade\r\n        .toLowerCase()\r\n        .includes(grade.toLowerCase());\r\n    });\r\n\r\n    console.log(filteredRows);\r\n    setAllRowsForShowing(filteredRows);\r\n    childRef.current.setToFirstPage();\r\n  };\r\n\r\n  const handleClearButton = () => {\r\n    setSearchTextFirstName(\"\");\r\n    setSearchTextLastName(\"\");\r\n    setSearchTextCardId(\"\");\r\n    setGrade('');\r\n    setAllRowsForShowing(usersContext.allUserslist);\r\n    childRef.current.setToFirstPage();\r\n  };\r\n\r\n  const handleChangeFirstName = (text) => {\r\n    setSearchTextFirstName(text);\r\n  };\r\n\r\n  const handleChangeLastName = (text) => {\r\n    setSearchTextLastName(text);\r\n  };\r\n\r\n  const handleChangeCardId = (text) => {\r\n    setSearchTextCardId(text);\r\n  };\r\n\r\n  useEffect(() => {\r\n    usersContext.setAllUsersList(usersContext.allUserslist);\r\n    setAllRowsForShowing(usersContext.allUserslist);\r\n  }, [usersContext.allUserslist]);\r\n\r\n  return (\r\n    <>\r\n      <Container sx={{ overflow: \"hidden\", width: \"95%\" }}>\r\n        <h2>Paieška:</h2>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              fullWidth\r\n              value={searchTextCardId}\r\n              onChange={(event) => {\r\n                handleChangeCardId(event.target.value);\r\n              }}\r\n              label=\"Kortelės ID\"\r\n              variant=\"outlined\"\r\n              autoComplete=\"disabled\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              fullWidth\r\n              value={searchTextFirstName}\r\n              onChange={(event) => {\r\n                handleChangeFirstName(event.target.value);\r\n              }}\r\n              label=\"Vardas\"\r\n              variant=\"outlined\"\r\n              autoComplete=\"disabled\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              fullWidth\r\n              value={searchTextLastName}\r\n              onChange={(event) => {\r\n                handleChangeLastName(event.target.value);\r\n              }}\r\n              label=\"Pavardė\"\r\n              variant=\"outlined\"\r\n              autoComplete=\"disabled\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n            fullWidth\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              inputProps={{MenuProps: {disableScrollLock: true}}}\r\n              label=\"Klasė\"\r\n              value={grade}\r\n              onChange={handleChange}\r\n            >\r\n              {grades.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2} justifyContent=\"flex-end\" sx ={{marginTop: 1}}>\r\n          <Grid alignItems={'right'} item xs={3}>\r\n            <Button\r\n              sx={{\r\n                height: \"100%\",\r\n              }}\r\n              fullWidth\r\n              autoComplete=\"disabled\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              startIcon={<SearchIcon />}\r\n              onClick={() => {\r\n                handleSearchButton();\r\n              }}\r\n            >\r\n              Ieškoti\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={3}>\r\n            <Button\r\n              sx={{\r\n                height: \"100%\",\r\n              }}\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              fullWidth\r\n              startIcon={<DeleteOutlineIcon />}\r\n              onClick={() => {\r\n                handleClearButton();\r\n              }}\r\n            >\r\n              Išvalyti\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n\r\n      <UsersTable\r\n        ref={childRef}\r\n        allRows={usersContext.allUserslist}\r\n        allRowsForShowing={allRowsForShowing}\r\n        handleShowUserInfo={props.handleChange}\r\n        isLoading={props.isLoading}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { createNewUser } from \"../../services/userServices\";\r\nimport { MessageContext } from \"../../context/messageContext\";\r\n\r\nexport default function AddUserForm(props) {\r\n  const [message, severity, showMessageBox, handleMessageShow, closeError] =\r\n    useContext(MessageContext);\r\n\r\n  const [values, setValues] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    cardID: \"\",\r\n    grade: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordCheck: \"\",\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const { data } = await createNewUser(values);\r\n      handleMessageShow(\"Naujas vartotojas sukurtas!\", \"success\");\r\n\r\n      props.setUsersList([\r\n        {\r\n          grade: values.grade,\r\n          cardID: values.cardID,\r\n          firstName: values.firstName,\r\n          lastName: values.lastName,\r\n        },\r\n        ...props.usersList,\r\n      ]);\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n      handleMessageShow(error.response.data.msg, \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"addUserContainer\">\r\n      <Container\r\n        sx={{\r\n          width: 500,\r\n          height: 710,\r\n          marginTop: \"110px\",\r\n          backgroundColor: \"#F5F5F5\",\r\n          borderRadius: \"1%\",\r\n        }}\r\n      >\r\n        <Grid container spacing={2} justify=\"center\">\r\n          <Grid item xs={10}>\r\n            <h2>Pridėti vartotoją</h2>\r\n          </Grid>\r\n          <Grid item xs={2} onClick={props.handleChange}>\r\n            <CloseIcon sx={{ fontSize: 40, color: \"#252525\", padding: 1 }} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3>Vaiko duomenys</h3>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"cardID\"\r\n              value={values.cardID}\r\n              onChange={handleInputChange}\r\n              fullWidth\r\n              required\r\n              autoComplete=\"disabled\"\r\n              label=\"Kortelės id\"\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              name=\"firstName\"\r\n              value={values.firstName}\r\n              onChange={handleInputChange}\r\n              fullWidth\r\n              required\r\n              autoComplete=\"disabled\"\r\n              label=\"Vardas\"\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              name=\"lastName\"\r\n              value={values.lastName}\r\n              onChange={handleInputChange}\r\n              fullWidth\r\n              required\r\n              autoComplete=\"disabled\"\r\n              label=\"Pavardė\"\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"grade\"\r\n              value={values.grade}\r\n              onChange={handleInputChange}\r\n              fullWidth\r\n              required\r\n              autoComplete=\"disabled\"\r\n              label=\"Klasė\"\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3>Vaiko prisijungimo duomenys</h3>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"email\"\r\n              value={values.email}\r\n              onChange={handleInputChange}\r\n              fullWidth\r\n              required\r\n              autoComplete=\"disabled\"\r\n              label=\"El. paštas\"\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              name=\"password\"\r\n              value={values.password}\r\n              onChange={handleInputChange}\r\n              fullWidth\r\n              required\r\n              type=\"password\"\r\n              autoComplete=\"disabled\"\r\n              label=\"Slaptažodis\"\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              name=\"passwordCheck\"\r\n              value={values.passwordCheck}\r\n              onChange={handleInputChange}\r\n              fullWidth\r\n              required\r\n              autoComplete=\"disabled\"\r\n              type=\"password\"\r\n              label=\"Pakartotas slaptažodis\"\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid align=\"center\" item xs={12}>\r\n            <Button\r\n              onClick={handleSubmit}\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              sx={{ padding: 1, width: \"50%\", margin: \"20px 0\" }}\r\n            >\r\n              Pridėti\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport MenuDrawer from \"../components/menuDrawer\";\r\nimport { Button } from \"@mui/material\";\r\nimport UsersSearch from \"../components/users/usersSearch\";\r\nimport AddUserForm from \"../components/users/addUserForm\";\r\nimport { getCurrentUser } from \"../services/authServices\";\r\nimport { getAllUsers } from \"../services/userServices\";\r\nimport { UsersContext } from \"../context/usersContext\";\r\n\r\nexport default function Users() {\r\n  const usersContext =\r\n    useContext(UsersContext);\r\n\r\n  //const [usersList, setUsersList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showNewUserForm, setshowNewUserForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    usersContext.allUserslist <= 0 && returnAllUsers();\r\n    getRole();\r\n  }, []);\r\n\r\n  async function getRole() {\r\n    try {\r\n      const user = await getCurrentUser();\r\n      if (!user) window.location = \"/unauthorized\";\r\n      if (user.role !== \"ADMIN\") {\r\n        window.location = \"/student\";\r\n      }\r\n    } catch (error) {\r\n      window.location = \"/unauthorized\";\r\n    }\r\n  }\r\n\r\n  async function returnAllUsers() {\r\n    setIsLoading(true);\r\n    try {\r\n      const { data } = await getAllUsers();\r\n\r\n      usersContext.setAllUsersList(data.users);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setIsLoading(false);\r\n  }\r\n\r\n  const handleShowUserAddForm = () => {\r\n    showNewUserForm ? setshowNewUserForm(false) : setshowNewUserForm(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MenuDrawer />\r\n      <h1 className=\"centerHeader\">Vartotojai</h1>\r\n      <Button\r\n        onClick={handleShowUserAddForm}\r\n        className=\"addUser-btn\"\r\n        variant=\"contained\"\r\n      >\r\n        Pridėti vartotoją\r\n      </Button>\r\n      <UsersSearch usersList={usersContext.allUserslist} isLoading={isLoading}></UsersSearch>\r\n      {showNewUserForm ? (\r\n        <AddUserForm\r\n          handleChange={handleShowUserAddForm}\r\n          setUsersList={usersContext.setAllUsersList}\r\n          usersList={usersContext.allUserslist}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import { createContext, useState } from \"react\";\r\nexport const BooksContext = createContext([]);\r\n\r\nexport const BooksProvider = (props) => {\r\n  const [allBooksList, setAllBooksList] = useState([]);\r\n\r\n  const handleDeleteBookContext = (bookID) => {\r\n    const bookListAfterDeletion = allBooksList.filter((element) =>  element.bookID !== bookID  )\r\n    setAllBooksList(bookListAfterDeletion);\r\n  };\r\n\r\n  const handleUpdateBookContext = (bookID, values) => {\r\n    const bookListAfterUpdate = allBooksList.filter((element) =>  element.bookID !== bookID   )\r\n    setAllBooksList([\r\n      {\r\n        bookID: values.bookID,\r\n        title: values.title,\r\n        author: values.author,\r\n        description: values.description,\r\n      },\r\n      ...bookListAfterUpdate,\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <BooksContext.Provider\r\n      value={{allBooksList, setAllBooksList, handleDeleteBookContext, handleUpdateBookContext}}\r\n    >\r\n      {props.children}\r\n    </BooksContext.Provider>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nexport default function InfoBook(props) {\r\n  return (\r\n    <div className=\"addUserContainer\">\r\n      <Container\r\n        className=\"addUserForm\"\r\n        sx={{\r\n          marginTop: 10,\r\n          width: 500,\r\n          height: 600,\r\n          backgroundColor: \"#F5F5F5\",\r\n          borderRadius: 2\r\n        }}\r\n      >\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          justify=\"center\"\r\n        >\r\n          <Grid item xs={10}>\r\n            <h2>Informaciją apie knygą</h2>\r\n          </Grid>\r\n          <Grid item xs={2} onClick={props.handleChange}>\r\n            <CloseIcon sx={{ fontSize: 40, color: \"#252525\", padding: 1 }} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3>{props.bookInfo.bookID} - {props.bookInfo.title} {props.bookInfo.author}</h3>\r\n          </Grid>\r\n          <Grid align=\"center\" item xs={12}>\r\n            <Button variant=\"contained\">Pridėti</Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nconst apiUrl = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n\r\naxios.interceptors.request.use((config) => {\r\n  config.headers.common[\"x-auth-token\"] = `${localStorage.getItem(\"token\")}`;\r\n  return config;\r\n});\r\n\r\nexport async function createNewBook(data) {\r\n  const response = await axios.post(`${apiUrl}/books/newBook`, data);\r\n  return response;\r\n}\r\n\r\nexport async function getAllBooks() {\r\n  const allBooks = await axios.get(`${apiUrl}/books/allBooks`);\r\n  return allBooks;\r\n}\r\n\r\nexport async function deleteBook(data) {\r\n  const deletedUser = await axios.delete(`${apiUrl}/books/deleteBook`, {\r\n    data,\r\n  });\r\n  return deletedUser;\r\n}\r\n\r\nexport async function getOneBook(data) {\r\n  const foundBook = await axios.post(`${apiUrl}/books/oneBook`, data);\r\n  return foundBook;\r\n}\r\n\r\nexport async function updateOneBook(data) {\r\n  const updatingUser = await axios.put(`${apiUrl}/books/updateBook`, data);\r\n  return updatingUser;\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { deleteBook } from \"../../services/bookServices\";\r\nimport { MessageContext } from \"../../context/messageContext\";\r\nimport { BooksContext } from \"../../context/booksContext\";\r\n\r\nexport default function DeleteBook(props) {\r\n  const booksContext =\r\n    useContext(BooksContext);\r\n\r\n    const [message, severity, showMessageBox, handleMessageShow, closeError] =\r\n    useContext(MessageContext);\r\n\r\n  const handleDeleteBook = async () => {\r\n    try {\r\n      const { data } = await deleteBook({bookID: props.bookInfo.bookID});\r\n      booksContext.handleDeleteBookContext(props.bookInfo.bookID);\r\n      handleMessageShow(\"Knyga buvo sėkmingai panaikinta!\", \"success\");\r\n      props.closeConfirmation();\r\n    } catch (error) {\r\n      handleMessageShow(error.response.data.msg, \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"addUserContainer\">\r\n      <Container\r\n        className=\"addUserForm\"\r\n        sx={{\r\n          width: 500,\r\n          height: 320,\r\n          marginTop: \"120px\",\r\n          backgroundColor: \"#F5F5F5\",\r\n          borderRadius: \"1%\",\r\n        }}\r\n      >\r\n        <Grid container spacing={3} justify=\"center\">\r\n          <Grid item xs={12}>\r\n            <h2 className=\"centerHeader\">\r\n              Ar tikrai norite panaikinti šią knygą?\r\n            </h2>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3 className=\"centerHeader\">\r\n              Knygos id - {props.bookInfo.bookID}\r\n            </h3>\r\n            <h3 className=\"centerHeader\">\r\n              {props.bookInfo.title}-{props.bookInfo.author}\r\n            </h3>\r\n          </Grid>\r\n          <Grid align=\"right\" item xs={6}>\r\n            <Button\r\n              size=\"large\"\r\n              color=\"error\"\r\n              variant=\"contained\"\r\n              onClick={handleDeleteBook}\r\n            >\r\n              Ištrinti\r\n            </Button>\r\n          </Grid>\r\n          <Grid align=\"left\" item xs={6}>\r\n            <Button\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              onClick={props.handleChange}\r\n            >\r\n              Atšaukti\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { MessageContext } from \"../../context/messageContext\";\r\nimport { getOneBook, updateOneBook } from \"../../services/bookServices\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { BooksContext } from \"../../context/booksContext\";\r\n\r\nexport default function UpdateBookForm(props) {\r\n  const [message, severity, showMessageBox, handleMessageShow, closeError] =\r\n    useContext(MessageContext);\r\n\r\n    const booksContext = useContext(BooksContext);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [values, setValues] = useState({\r\n    bookID: \"\",\r\n    title: \"\",\r\n    author: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const fetchBook = async (bookID) => {\r\n    try {\r\n      const { data } = await getOneBook({ bookID });\r\n      setValues({\r\n        bookID: data.book.bookID,\r\n        title: data.book.title,\r\n        author: data.book.author,\r\n        description: data.book.description,\r\n      });\r\n    } catch (error) {\r\n      handleMessageShow(error.response.data.msg, \"error\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      fetchBook(props.bookInfo.bookID);\r\n    } catch (error) {\r\n      handleMessageShow(error.response.data.msg, \"error\");\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  // darbai ateičiai :\r\n  // reikia padaryti update route back ende ir čia išsiuntimą į jį\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const { data } = await updateOneBook(values);\r\n      booksContext.handleUpdateBookContext(values.bookID, values);\r\n      handleMessageShow(\"Knyga atnaujinta!\", \"success\");\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n      handleMessageShow(error.response.data.msg, \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"addUserContainer\">\r\n      <Container\r\n        sx={{\r\n          width: 500,\r\n          height: 650,\r\n          marginTop: \"120px\",\r\n          backgroundColor: \"#F5F5F5\",\r\n          borderRadius: \"1%\",\r\n        }}\r\n      >\r\n        {isLoading ? (\r\n          <CircularProgress\r\n            sx={{ display: \"flex\", margin: \"auto\", padding: 15 }}\r\n          />\r\n        ) : (\r\n          <Grid container spacing={2} justify=\"center\">\r\n            <Grid item xs={10}>\r\n              <h2>Atnaujinti knyga</h2>\r\n            </Grid>\r\n            <Grid item xs={2} onClick={props.handleChange}>\r\n              <CloseIcon sx={{ fontSize: 40, color: \"#252525\", padding: 1 }} />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name=\"bookID\"\r\n                disabled\r\n                value={values.bookID}\r\n                onChange={handleInputChange}\r\n                fullWidth\r\n                required\r\n                autoComplete=\"disabled\"\r\n                label=\"Knygos id\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name=\"title\"\r\n                value={values.title}\r\n                onChange={handleInputChange}\r\n                fullWidth\r\n                required\r\n                autoComplete=\"disabled\"\r\n                label=\"Knygos pavadinimas\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name=\"author\"\r\n                value={values.author}\r\n                onChange={handleInputChange}\r\n                fullWidth\r\n                required\r\n                autoComplete=\"disabled\"\r\n                label=\"Autorius\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <h3>Knygos aprašymas</h3>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                minRows={4}\r\n                multiline\r\n                maxRows={4}\r\n                name=\"description\"\r\n                value={values.description}\r\n                onChange={handleInputChange}\r\n                fullWidth\r\n                label=\"Aprašymas\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid align=\"center\" item xs={12}>\r\n              <Button\r\n                onClick={handleSubmit}\r\n                size=\"large\"\r\n                variant=\"contained\"\r\n                sx={{ padding: 1, width: \"50%\", margin: \"20px 0\" }}\r\n              >\r\n                Redaguoti\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React, {\r\n  useState,\r\n  memo,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useContext,\r\n} from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { Button } from \"@mui/material\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { UsersContext } from \"../../context/usersContext\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport InfoAboutBookBox from \"../books/infoAboutBook\";\r\nimport DeleteBookConfirmation from \"../books/deleteBookConfirmation\";\r\nimport UpdateBookForm from '../books/updateBookForm';\r\n\r\nconst columns = [\r\n  {\r\n    id: \"bookID\",\r\n    label: \"Knygos ID\",\r\n    width: 50,\r\n    minWidth: 50,\r\n  },\r\n  { id: \"title\", label: \"Pavadinimas\", width: 150, minWidth: 150 },\r\n  { id: \"author\", label: \"Autorius\", width: 150, minWidth: 150 },\r\n  {\r\n    id: \"actions\",\r\n    label: \"Veiksmai\",\r\n    width: 100,\r\n    minWidth: 100,\r\n    align: \"right\",\r\n  },\r\n];\r\n\r\nconst BooksTable = forwardRef((props, ref) => {\r\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\r\n  const [showUpdateBookForm, setShowUpdateBookForm] = useState(false);\r\n\r\n  const [showBookInfo, setshowBookInfo] = useState(false);\r\n  const [bookInfo, setBookInfo] = useState({\r\n    bookID: \"\",\r\n    title: \"\",\r\n    author: \"\",\r\n  });\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleShowBookInfo = (row) => {\r\n    setBookInfo({\r\n      bookID: row.bookID,\r\n      title: row.title,\r\n      author: row.author,\r\n    });\r\n    showBookInfo ? setshowBookInfo(false) : setshowBookInfo(true);\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    setToFirstPage,\r\n  }));\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const setToFirstPage = () => {\r\n    setPage(0);\r\n  };\r\n\r\n  const handleShowDeleteConfirmation = (row) => {\r\n    setBookInfo({\r\n      bookID: row.bookID,\r\n      title: row.title,\r\n      author: row.author,\r\n    });\r\n    showDeleteConfirmation\r\n      ? setShowDeleteConfirmation(false)\r\n      : setShowDeleteConfirmation(true);\r\n  };\r\n\r\n  const handleCloseDeleteConfirmation = () => {\r\n    setShowDeleteConfirmation(false);\r\n  };\r\n\r\n  const handleShowUpdateBookForm = (row) => {\r\n    setBookInfo({\r\n      bookID: row.bookID,\r\n      title: row.title,\r\n      author: row.author,\r\n    });\r\n    showUpdateBookForm\r\n      ? setShowUpdateBookForm(false)\r\n      : setShowUpdateBookForm(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.isLoading ? (\r\n        <CircularProgress sx={{ display: \"flex\", margin: \"150px auto\" }} />\r\n      ) : (\r\n        <Paper className=\"userTable\" sx={{ width: \"95%\", overflow: \"hidden\" }}>\r\n          <TableContainer sx={{ maxHeight: 430 }}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {props.allRowsForShowing\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.cardID}\r\n                      >\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.id === \"actions\" ? (\r\n                                <>\r\n                                  <Button\r\n                                    onClick={() => handleShowBookInfo(row)}\r\n                                  >\r\n                                    Informacija\r\n                                  </Button>\r\n                                  <Button onClick={() =>\r\n                                      handleShowUpdateBookForm(row)\r\n                                    }>Redaguoti</Button>\r\n                                  <Button\r\n                                    onClick={() =>\r\n                                      handleShowDeleteConfirmation(row)\r\n                                    }\r\n                                  >\r\n                                    Ištrinti\r\n                                  </Button>\r\n                                </>\r\n                              \r\n                              ) : column.format && typeof value === \"number\" ? (\r\n                                column.format(value)\r\n                              ) : (\r\n                                value\r\n                              )}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 100]}\r\n            component=\"div\"\r\n            count={props.allRowsForShowing.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      )}\r\n      {showBookInfo ? (\r\n        <InfoAboutBookBox\r\n          bookInfo={bookInfo}\r\n          handleChange={handleShowBookInfo}\r\n        />\r\n      ) : null}\r\n\r\n      {showDeleteConfirmation ? (\r\n        <DeleteBookConfirmation\r\n          bookInfo={bookInfo}\r\n          handleChange={handleShowDeleteConfirmation}\r\n          closeConfirmation={handleCloseDeleteConfirmation}\r\n        />\r\n      ) : null}\r\n\r\n      {showUpdateBookForm ? (\r\n        <UpdateBookForm\r\n          bookInfo={bookInfo}\r\n          handleChange={handleShowUpdateBookForm}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default memo(BooksTable);\r\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport DeleteOutlineIcon from \"@mui/icons-material/DeleteOutline\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { BooksContext } from \"../../context/booksContext\";\r\nimport BooksTable from \"./booksTable\";\r\n\r\n\r\nexport default function BookSearch(props) {\r\n  const booksContext = useContext(BooksContext);\r\n\r\n  const [allRowsForShowing, setAllRowsForShowing] = useState(\r\n    props.booksList\r\n  );\r\n\r\n  const [searchTextBookId, setSearchTextBookId] = useState(\"\");\r\n  const [searchTextTitle, setSearchTextTitle] = useState(\"\");\r\n  const [searchTextAuthor, setSearchTextAuthor] = useState(\"\");\r\n\r\n  const childRef = useRef();\r\n\r\n  const handleSearchButton = () => {\r\n    var filteredRows = booksContext.allBooksList;\r\n\r\n    filteredRows = filteredRows.filter((row) => {\r\n      return row.bookID.toLowerCase().includes(searchTextTitle.toLowerCase());\r\n    });\r\n\r\n    filteredRows = filteredRows.filter((row) => {\r\n      return row.author\r\n        .toLowerCase()\r\n        .includes(searchTextAuthor.toLowerCase());\r\n    });\r\n\r\n    filteredRows = filteredRows.filter((row) => {\r\n      return row.title\r\n        .toLowerCase()\r\n        .includes(searchTextBookId.toLowerCase());\r\n    });\r\n\r\n\r\n    console.log(filteredRows);\r\n    setAllRowsForShowing(filteredRows);\r\n    childRef.current.setToFirstPage();\r\n  };\r\n\r\n  const handleClearButton = () => {\r\n    setSearchTextBookId(\"\");\r\n    setSearchTextAuthor(\"\");\r\n    setSearchTextTitle(\"\");\r\n    setAllRowsForShowing(booksContext.allBooksList);\r\n    childRef.current.setToFirstPage();\r\n  };\r\n\r\n  const handleChangeBookID = (text) => {\r\n    setSearchTextBookId(text);\r\n  };\r\n\r\n  const handleChangeAuthor = (text) => {\r\n    setSearchTextAuthor(text);\r\n  };\r\n\r\n  const handleChangeTitle = (text) => {\r\n    setSearchTextTitle(text);\r\n  };\r\n\r\n  useEffect(() => {\r\n    booksContext.setAllBooksList(booksContext.allBooksList);\r\n    setAllRowsForShowing(booksContext.allBooksList);\r\n  }, [booksContext.allBooksList]);\r\n\r\n  return (\r\n    <>\r\n      <Container sx={{ overflow: \"hidden\", width: \"95%\" }}>\r\n        <h2>Paieška:</h2>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              value={searchTextTitle}\r\n              onChange={(event) => {\r\n                handleChangeTitle(event.target.value);\r\n              }}\r\n              label=\"Knygos ID\"\r\n              variant=\"outlined\"\r\n              autoComplete=\"disabled\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              value={searchTextBookId}\r\n              onChange={(event) => {\r\n                handleChangeBookID(event.target.value);\r\n              }}\r\n              label=\"Pavadinimas\"\r\n              variant=\"outlined\"\r\n              autoComplete=\"disabled\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              value={searchTextAuthor}\r\n              onChange={(event) => {\r\n                handleChangeAuthor(event.target.value);\r\n              }}\r\n              label=\"Autorius\"\r\n              variant=\"outlined\"\r\n              autoComplete=\"disabled\"\r\n            />\r\n          </Grid>\r\n          {/* <Grid item xs={3}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              inputProps={{ MenuProps: { disableScrollLock: true } }}\r\n              label=\"Klasė\"\r\n              value={grade}\r\n              onChange={handleChange}\r\n            >\r\n              {grades.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid> */}\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          justifyContent=\"flex-end\"\r\n          sx={{ marginTop: 1 }}\r\n        >\r\n          <Grid alignItems={\"right\"} item xs={3}>\r\n            <Button\r\n              sx={{\r\n                height: \"100%\",\r\n              }}\r\n              fullWidth\r\n              autoComplete=\"disabled\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              startIcon={<SearchIcon />}\r\n              onClick={() => {\r\n                handleSearchButton();\r\n              }}\r\n            >\r\n              Ieškoti\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={3}>\r\n            <Button\r\n              sx={{\r\n                height: \"100%\",\r\n              }}\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              fullWidth\r\n              startIcon={<DeleteOutlineIcon />}\r\n              onClick={() => {\r\n                handleClearButton();\r\n              }}\r\n            >\r\n              Išvalyti\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n\r\n      <BooksTable\r\n        ref={childRef}\r\n        allRows={booksContext.allBooksList}\r\n        allRowsForShowing={allRowsForShowing}\r\n        handleShowUserInfo={props.handleChange}\r\n        isLoading={props.isLoading}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { createNewBook } from \"../../services/bookServices\";\r\nimport { MessageContext } from \"../../context/messageContext\";\r\n\r\nexport default function AddBookForm(props) {\r\n  const [\r\n    error,\r\n    setError,\r\n    showError,\r\n    setShowError,\r\n    severity,\r\n    setSeverity,\r\n    closeError,\r\n  ] = useContext(MessageContext);\r\n\r\n  const [values, setValues] = useState({\r\n    bookID: \"\",\r\n    title: \"\",\r\n    author: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const { data } = await createNewBook(values);\r\n      setSeverity(\"success\");\r\n      setError(\"Naujas knyga sukurta!\");\r\n      setShowError(true);\r\n      try {\r\n        props.setBooksList([\r\n          {\r\n            bookID: values.bookID,\r\n            title: values.title,\r\n            author: values.author,\r\n            description: values.description,\r\n          },\r\n          ...props.booksList,\r\n        ]);\r\n      } catch (error) {\r\n        setSeverity(\"error\");\r\n        setError(\"Ups... Kažkas nutiko negerai...\");\r\n        setShowError(true);\r\n      }\r\n    } catch (error) {\r\n      setSeverity(\"error\");\r\n      setError(error.response.data.msg);\r\n      setShowError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"addUserContainer\">\r\n      <Container\r\n        sx={{\r\n          width: 500,\r\n          height: 710,\r\n          marginTop: \"110px\",\r\n          backgroundColor: \"#F5F5F5\",\r\n          borderRadius: \"1%\",\r\n        }}\r\n      >\r\n        <Grid container spacing={2} justify=\"center\">\r\n          <Grid item xs={10}>\r\n            <h2>Pridėti knygą</h2>\r\n          </Grid>\r\n          <Grid item xs={2} onClick={props.handleChange}>\r\n            <CloseIcon sx={{ fontSize: 40, color: \"#252525\", padding: 1 }} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3>Knygos duomenys</h3>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"bookID\"\r\n              value={values.bookID}\r\n              onChange={handleInputChange}\r\n              fullWidth\r\n              required\r\n              autoComplete=\"disabled\"\r\n              label=\"Knygos id\"\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleInputChange}\r\n              fullWidth\r\n              required\r\n              autoComplete=\"disabled\"\r\n              label=\"Knygos pavadinimas\"\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"author\"\r\n              value={values.author}\r\n              onChange={handleInputChange}\r\n              fullWidth\r\n              required\r\n              autoComplete=\"disabled\"\r\n              label=\"Autorius\"\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3>Knygos aprašymas</h3>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              minRows={4}\r\n              multiline\r\n              maxRows={4}\r\n              name=\"description\"\r\n              value={values.description}\r\n              onChange={handleInputChange}\r\n              fullWidth\r\n              label=\"Aprašymas\"\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid align=\"center\" item xs={12}>\r\n            <Button\r\n              onClick={handleSubmit}\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              sx={{ padding: 1, width: \"50%\", margin: \"20px 0\" }}\r\n            >\r\n              Pridėti\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport MenuDrawer from \"../components/menuDrawer\";\r\nimport { Button } from \"@mui/material\";\r\nimport BookSearch from \"../components/books/bookSearch\";\r\nimport { BooksContext } from \"../context/booksContext\";\r\nimport { getCurrentUser } from \"../services/authServices\";\r\nimport AddBookForm from \"../components/books/addBookForm\";\r\nimport {getAllBooks} from '../services/bookServices'\r\n\r\nexport default function Books() {\r\n  const booksContext = useContext(BooksContext);\r\n\r\n  const [showNewBookForm, setshowNewBookForm] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleShowUserAddForm = () => {\r\n    showNewBookForm ? setshowNewBookForm(false) : setshowNewBookForm(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    booksContext.allBooksList <= 0 && returnAllBooks();\r\n    console.log(booksContext.allBooksList);\r\n    getRole();\r\n  }, []);\r\n\r\n  async function getRole() {\r\n    try {\r\n      const user = await getCurrentUser();\r\n      if (!user) window.location = \"/unauthorized\";\r\n      if (user.role !== \"ADMIN\") {\r\n        window.location = \"/student\";\r\n      }\r\n    } catch (error) {\r\n      window.location = \"/unauthorized\";\r\n    }\r\n  }\r\n\r\n  async function returnAllBooks() {\r\n    setIsLoading(true);\r\n    try {\r\n      const { data } = await getAllBooks();\r\n      console.log(data.books)\r\n      booksContext.setAllBooksList(data.books);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <MenuDrawer />\r\n      <h1 className=\"centerHeader\">Knygos</h1>\r\n      <Button\r\n        onClick={handleShowUserAddForm}\r\n        className=\"addUser-btn\"\r\n        variant=\"contained\"\r\n      >\r\n        Pridėti knygą\r\n      </Button>\r\n      <BookSearch booksList={booksContext.allBooksList} isLoading={isLoading}></BookSearch>\r\n      {showNewBookForm ? (\r\n        <AddBookForm\r\n          handleChange={handleShowUserAddForm}\r\n          setBooksList={booksContext.setAllBooksList}\r\n          booksList={booksContext.allBooksList}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import { createContext, useState, useContext } from \"react\";\r\nimport { MessageContext } from \"./messageContext\";\r\nexport const BooksCartContext = createContext([]);\r\n\r\nexport const BooksCartProvider = (props) => {\r\n  const [message, severity, showMessageBox, handleMessageShow, closeError] =\r\n    useContext(MessageContext);\r\n\r\n  const [allBooksCartList, setAllBooksCartList] = useState([]); //To store book objects\r\n\r\n  const handleDeleteBooksCartContext = (bookID) => {\r\n    const bookListAfterDeletion = allBooksCartList.filter(\r\n      (element) => element.bookID !== bookID\r\n    );\r\n    setAllBooksCartList(bookListAfterDeletion);\r\n  };\r\n\r\n  const handleAddBooksCartContext = (values) => {\r\n    const book = {\r\n      bookID: values.bookID,\r\n      title: values.title,\r\n      author: values.author,\r\n      description: values.description,\r\n    };\r\n\r\n    if (allBooksCartList.some((element) => element.bookID === values.bookID)) {\r\n      handleMessageShow(\"Ši knyga jau krepšelyje\", \"error\");\r\n    } else {\r\n      setAllBooksCartList([book, ...allBooksCartList]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BooksCartContext.Provider\r\n      value={{\r\n        allBooksCartList,\r\n        setAllBooksCartList,\r\n        handleDeleteBooksCartContext,\r\n        handleAddBooksCartContext,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </BooksCartContext.Provider>\r\n  );\r\n};\r\n","import React, {\r\n  useState,\r\n  memo,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useContext,\r\n} from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { Button } from \"@mui/material\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { UsersContext } from \"../../context/usersContext\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport InfoAboutBookBox from \"../books/infoAboutBook\";\r\nimport DeleteBookConfirmation from \"../books/deleteBookConfirmation\";\r\nimport UpdateBookForm from '../books/updateBookForm';\r\nimport { BooksCartContext } from \"../../context/booksCartContext\";\r\n\r\nconst columns = [\r\n  {\r\n    id: \"bookID\",\r\n    label: \"Knygos ID\",\r\n    width: 50,\r\n    minWidth: 50,\r\n  },\r\n  { id: \"title\", label: \"Pavadinimas\", width: 150, minWidth: 150 },\r\n  { id: \"author\", label: \"Autorius\", width: 150, minWidth: 150 },\r\n  {\r\n    id: \"actions\",\r\n    label: \"Veiksmai\",\r\n    width: 100,\r\n    minWidth: 100,\r\n    align: \"right\",\r\n  },\r\n];\r\n\r\nconst BooksTable = forwardRef((props, ref) => {\r\n\r\n  const booksCartContext = useContext(BooksCartContext);\r\n\r\n  const [showBookInfo, setshowBookInfo] = useState(false);\r\n  const [bookInfo, setBookInfo] = useState({\r\n    bookID: \"\",\r\n    title: \"\",\r\n    author: \"\",\r\n  });\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleShowBookInfo = (row) => {\r\n    setBookInfo({\r\n      bookID: row.bookID,\r\n      title: row.title,\r\n      author: row.author,\r\n    });\r\n    showBookInfo ? setshowBookInfo(false) : setshowBookInfo(true);\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    setToFirstPage,\r\n  }));\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const setToFirstPage = () => {\r\n    setPage(0);\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {props.isLoading ? (\r\n        <CircularProgress sx={{ display: \"flex\", margin: \"100px auto\" }} />\r\n      ) : (\r\n        <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\r\n          <TableContainer sx={{ maxHeight: 400 }}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {props.allRowsForShowing\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.cardID}\r\n                      >\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.id === \"actions\" ? (\r\n                                <>\r\n                                  <Button\r\n                                    onClick={() => handleShowBookInfo(row)}\r\n                                  >\r\n                                    Informacija\r\n                                  </Button>\r\n                            \r\n                                  <Button\r\n                                    onClick={() =>\r\n                                      booksCartContext.handleAddBooksCartContext(row)\r\n                                    }\r\n                                  >\r\n                                    Pirdėti\r\n                                  </Button>\r\n                                </>\r\n                              \r\n                              ) : column.format && typeof value === \"number\" ? (\r\n                                column.format(value)\r\n                              ) : (\r\n                                value\r\n                              )}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 100]}\r\n            component=\"div\"\r\n            count={props.allRowsForShowing.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      )}\r\n      {showBookInfo ? (\r\n        <InfoAboutBookBox\r\n          bookInfo={bookInfo}\r\n          handleChange={handleShowBookInfo}\r\n        />\r\n      ) : null}\r\n\r\n    </>\r\n  );\r\n});\r\n\r\nexport default memo(BooksTable);\r\n","import React, {\r\n  useState,\r\n  memo,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useContext,\r\n} from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { Button } from \"@mui/material\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { UsersContext } from \"../../context/usersContext\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport InfoAboutBookBox from \"../books/infoAboutBook\";\r\nimport DeleteBookConfirmation from \"../books/deleteBookConfirmation\";\r\nimport UpdateBookForm from '../books/updateBookForm';\r\nimport { BooksCartContext } from \"../../context/booksCartContext\";\r\n\r\nconst columns = [\r\n  {\r\n    id: \"bookID\",\r\n    label: \"Knygos ID\",\r\n    width: 50,\r\n    minWidth: 50,\r\n  },\r\n  { id: \"title\", label: \"Pavadinimas\", width: 150, minWidth: 150 },\r\n  { id: \"author\", label: \"Autorius\", width: 150, minWidth: 150 },\r\n  {\r\n    id: \"actions\",\r\n    label: \"Veiksmai\",\r\n    width: 100,\r\n    minWidth: 100,\r\n    align: \"right\",\r\n  },\r\n];\r\n\r\nconst BooksTable = forwardRef((props, ref) => {\r\n\r\n  const booksCartContext = useContext(BooksCartContext);\r\n\r\n  const [showBookInfo, setshowBookInfo] = useState(false);\r\n  const [bookInfo, setBookInfo] = useState({\r\n    bookID: \"\",\r\n    title: \"\",\r\n    author: \"\",\r\n  });\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleShowBookInfo = (row) => {\r\n    setBookInfo({\r\n      bookID: row.bookID,\r\n      title: row.title,\r\n      author: row.author,\r\n    });\r\n    showBookInfo ? setshowBookInfo(false) : setshowBookInfo(true);\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    setToFirstPage,\r\n  }));\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const setToFirstPage = () => {\r\n    setPage(0);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      {props.isLoading ? (\r\n        <CircularProgress sx={{ display: \"flex\", margin: \"100px auto\" }} />\r\n      ) : (\r\n        <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\r\n          <TableContainer sx={{ maxHeight: 400}}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {props.allRowsForShowing\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.cardID}\r\n                      >\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.id === \"actions\" ? (\r\n                                <>\r\n                                  <Button\r\n                                    onClick={() => handleShowBookInfo(row)}\r\n                                  >\r\n                                    Informacija\r\n                                  </Button>\r\n                            \r\n                                  <Button\r\n                                    onClick={() =>\r\n                                      booksCartContext.handleDeleteBooksCartContext(row.bookID)\r\n                                    }\r\n                                  >\r\n                                    Pašalinti\r\n                                  </Button>\r\n                                </>\r\n                              \r\n                              ) : column.format && typeof value === \"number\" ? (\r\n                                column.format(value)\r\n                              ) : (\r\n                                value\r\n                              )}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 100]}\r\n            component=\"div\"\r\n            count={props.allRowsForShowing.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      )}\r\n      {showBookInfo ? (\r\n        <InfoAboutBookBox\r\n          bookInfo={bookInfo}\r\n          handleChange={handleShowBookInfo}\r\n        />\r\n      ) : null}\r\n\r\n    </>\r\n  );\r\n});\r\n\r\nexport default memo(BooksTable);\r\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport DeleteOutlineIcon from \"@mui/icons-material/DeleteOutline\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { BooksContext } from \"../../context/booksContext\";\r\nimport { BooksCartContext } from \"../../context/booksCartContext\";\r\nimport BooksTable from \"./booksCheckOutTable\";\r\nimport BooksCart from \"./booksCartTable\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\nexport default function BookSearch(props) {\r\n  const booksContext = useContext(BooksContext);\r\n  const booksCartContext = useContext(BooksCartContext)\r\n\r\n  const [allRowsForShowing, setAllRowsForShowing] = useState(props.booksList);\r\n\r\n  const [searchTextBookId, setSearchTextBookId] = useState(\"\");\r\n  const [searchTextTitle, setSearchTextTitle] = useState(\"\");\r\n  const [searchTextAuthor, setSearchTextAuthor] = useState(\"\");\r\n\r\n  const childRef = useRef();\r\n\r\n  const handleSearchButton = () => {\r\n    var filteredRows = booksContext.allBooksList;\r\n\r\n    filteredRows = filteredRows.filter((row) => {\r\n      return row.bookID.toLowerCase().includes(searchTextTitle.toLowerCase());\r\n    });\r\n\r\n    filteredRows = filteredRows.filter((row) => {\r\n      return row.author.toLowerCase().includes(searchTextAuthor.toLowerCase());\r\n    });\r\n\r\n    filteredRows = filteredRows.filter((row) => {\r\n      return row.title.toLowerCase().includes(searchTextBookId.toLowerCase());\r\n    });\r\n\r\n    console.log(filteredRows);\r\n    setAllRowsForShowing(filteredRows);\r\n    childRef.current.setToFirstPage();\r\n  };\r\n\r\n  const handleClearButton = () => {\r\n    setSearchTextBookId(\"\");\r\n    setSearchTextAuthor(\"\");\r\n    setSearchTextTitle(\"\");\r\n    setAllRowsForShowing(booksContext.allBooksList);\r\n    childRef.current.setToFirstPage();\r\n  };\r\n\r\n  const handleChangeBookID = (text) => {\r\n    setSearchTextBookId(text);\r\n  };\r\n\r\n  const handleChangeAuthor = (text) => {\r\n    setSearchTextAuthor(text);\r\n  };\r\n\r\n  const handleChangeTitle = (text) => {\r\n    setSearchTextTitle(text);\r\n  };\r\n\r\n  useEffect(() => {\r\n    booksContext.setAllBooksList(booksContext.allBooksList);\r\n    setAllRowsForShowing(booksContext.allBooksList);\r\n  }, [booksContext.allBooksList]);\r\n\r\n  return (\r\n    <>\r\n      <Container sx={{ overflow: \"hidden\", width: \"95%\" }}>\r\n        <h2>Paieška:</h2>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={2.5}>\r\n            <TextField\r\n              fullWidth\r\n              value={searchTextTitle}\r\n              onChange={(event) => {\r\n                handleChangeTitle(event.target.value);\r\n              }}\r\n              label=\"Knygos ID\"\r\n              variant=\"outlined\"\r\n              autoComplete=\"disabled\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2.5}>\r\n            <TextField\r\n              fullWidth\r\n              value={searchTextBookId}\r\n              onChange={(event) => {\r\n                handleChangeBookID(event.target.value);\r\n              }}\r\n              label=\"Pavadinimas\"\r\n              variant=\"outlined\"\r\n              autoComplete=\"disabled\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2.5}>\r\n            <TextField\r\n              fullWidth\r\n              value={searchTextAuthor}\r\n              onChange={(event) => {\r\n                handleChangeAuthor(event.target.value);\r\n              }}\r\n              label=\"Autorius\"\r\n              variant=\"outlined\"\r\n              autoComplete=\"disabled\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={2.5}>\r\n            <Button\r\n              sx={{\r\n                height: \"100%\",\r\n              }}\r\n              fullWidth\r\n              autoComplete=\"disabled\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              startIcon={<SearchIcon />}\r\n              onClick={() => {\r\n                handleSearchButton();\r\n              }}\r\n            >\r\n              Ieškoti\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={2}>\r\n            <Button\r\n              sx={{\r\n                height: \"100%\",\r\n              }}\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              fullWidth\r\n              startIcon={<DeleteOutlineIcon />}\r\n              onClick={() => {\r\n                handleClearButton();\r\n              }}\r\n            >\r\n              Išvalyti\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n\r\n      <Container maxWidth=\"fixed\" sx={{ overflow: \"hidden\", width: \"100%\" }}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={12} lg={6}>\r\n            <h2>Knygos:</h2>\r\n            <BooksTable\r\n              ref={childRef}\r\n              allRowsForShowing={allRowsForShowing}\r\n              handleShowUserInfo={props.handleChange}\r\n              isLoading={props.isLoading}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={12} lg={6}>\r\n            <h2>Krepšelis:</h2>\r\n            <BooksCart\r\n              ref={childRef}\r\n              allRowsForShowing={booksCartContext.allBooksCartList}\r\n              handleShowUserInfo={props.handleChange}\r\n              isLoading={props.isLoading}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n        sx= {{margin: \"20px 0px\"}}\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"flex-end\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Button endIcon={<SendIcon />} size=\"large\" variant=\"contained\">Išduoti knygas</Button>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport MenuDrawer from \"../components/menuDrawer\";\r\nimport { Button } from \"@mui/material\";\r\nimport BookSearch from \"../components/booksCheckInOut/bookSearchCheckInOut\";\r\nimport { BooksContext } from \"../context/booksContext\";\r\nimport { getCurrentUser } from \"../services/authServices\";\r\nimport AddBookForm from \"../components/books/addBookForm\";\r\nimport {getAllBooks} from '../services/bookServices'\r\n\r\nexport default function Books() {\r\n  const booksContext = useContext(BooksContext);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getRole();\r\n    booksContext.allBooksList <= 0 && returnAllBooks();\r\n    console.log(booksContext.allBooksList);\r\n    \r\n  }, []);\r\n\r\n  async function getRole() {\r\n    try {\r\n      const user = await getCurrentUser();\r\n      if (!user) window.location = \"/unauthorized\";\r\n      if (user.role !== \"ADMIN\") {\r\n        window.location = \"/student\";\r\n      }\r\n    } catch (error) {\r\n      window.location = \"/unauthorized\";\r\n    }\r\n  }\r\n\r\n  async function returnAllBooks() {\r\n    setIsLoading(true);\r\n    try {\r\n      const { data } = await getAllBooks();\r\n      console.log(data.books)\r\n      booksContext.setAllBooksList(data.books);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  console.log(\"hi\");\r\n\r\n  return (\r\n    <div>\r\n      <MenuDrawer />\r\n      <h1 className=\"centerHeader\">Knygų išdavmas/gražinimas</h1>\r\n      \r\n      <BookSearch booksList={booksContext.allBooksList} isLoading={isLoading}></BookSearch>\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport MenuDrawer from \"./components/menuDrawer\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport SignIn from \"./pages/SignIn\";\nimport Users from \"./pages/Users\";\nimport Books from \"./pages/Books\";\nimport BooksCkeckOutCheckIn from \"./pages/BooksCheckOutCheckIn\";\nimport FlashMessage from \"./components/flashMessage\";\nimport { MessageContext } from \"./context/messageContext\";\n\nexport default function App() {\n  return (\n\n     \n      <Router>\n         <FlashMessage/>\n        <Routes>\n          <Route path=\"/\" element={<SignIn />} />\n          <Route path=\"/users\" element={<Users />} />\n          <Route path=\"/books\" element={<Books />} />\n          <Route path=\"/bookscheckincheckout\" element={<BooksCkeckOutCheckIn />} />\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      </Router>\n\n  );\n}\n\n\n\nfunction NotFound() {\n  return (\n    <div>\n      <h2>404 klaida</h2>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { MessageProvider } from \"./context/messageContext\";\nimport { UsersProvider } from \"./context/usersContext\";\nimport { BooksProvider } from \"./context/booksContext\";\nimport { BooksCartProvider } from \"./context/booksCartContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <MessageProvider>\n      <UsersProvider>\n        <BooksProvider>\n          <BooksCartProvider>\n            <App />\n          </BooksCartProvider>\n        </BooksProvider>\n      </UsersProvider>\n    </MessageProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}